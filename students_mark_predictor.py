# -*- coding: utf-8 -*-
"""students_mark_predictor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oB4ekOGpWt-wmwfU0CrMXSXIqHfnOu8b

**TO PREDICT**

*What will be the predicted score if a student studies for 9.25 hrs a day?*

AUTHOR:- **HARSHIT SHUKLA**

#IMPORT LIBRARIES
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""## Load Dataset"""

path = r"https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
df = pd.read_csv(path)

df.head()

df.tail()

df.shape

"""## Discover and Visualize the data to gain insights"""

df.info()

df.describe()

plt.scatter(x = df.Hours, y = df.Scores)
plt.xlabel("Students study hours")
plt.ylabel("Students marks")
plt.title("Scatter Plot Of Students Study Hours vs Students Marks")
plt.show()

"""## Prepare the data for Machine Learning Algorithms"""

# Data Cleaning

df.isnull().sum()

df.mean()

df2 = df.fillna(df.mean())

df2.isnull().sum()

df2.head()

# split dataset

x= df2.drop("Scores", axis = "columns")
y= df2.drop("Hours", axis = "columns")
print("shape of x= ", x.shape)
print("shape of y= ", y.shape)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.2, random_state=51)
print("shape of x_train= ", x_train.shape)
print("shape of y_train= ", y_train.shape)
print("shape of x_test= ", x_test.shape)
print("shape of y_test= ", y_test.shape)

"""## Select a model and train it"""

# y = m * x + c
from sklearn.linear_model import LinearRegression
lr = LinearRegression()

lr.fit(x_train,y_train)

lr.coef_

lr.intercept_

m = 9.56
c = 2.70
y = m * 4 + c
y

lr.predict([[4]])[0][0].round(2)

y_pred = lr.predict(x_test)
y_pred

pd.DataFrame(np.c_[x_test, y_test, y_pred], columns = ["Hours", "Scores_original", "Scores_predicted"])

"""## Fine-tune your model"""

lr.score(x_test,y_test)

plt.scatter(x_train,y_train)

plt.scatter(x_test, y_test)
plt.plot(x_train, lr.predict(x_train), color = "r")

"""## Present Your Solution

## Save ML MODEL
"""

import joblib
joblib.dump(lr, "students_mark_predictor_model.pkl")

model = joblib.load("students_mark_predictor_model.pkl")

model.predict([[6]])[0][0]

"""## Output for the 9.25 hrs"""

model.predict([[9.25]])[0][0].round(2)